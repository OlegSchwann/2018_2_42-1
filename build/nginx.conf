user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  65;
	client_max_body_size 10m;

    gzip  on;
		#  Allows sending precompressed files with the “.gz” filename extension instead of regular files.
	gzip_static on;

    server {
        listen 80;

        # Return of static files.
        location / {
            root   /var/www/html;
            index  /index.html;
            # Return the single-page application root 'index.html' if the user came by generated URL.
            try_files $uri /index.html;
        }

        # Return user-uploaded files, such as avatars.
        location /media {
            root /var/www;
        }

        # Proxy to api server.
        location /api/v1 {
            proxy_pass http://localhost:8080 ;
        }

        # Proxy to game server with WebSocket headers.
        location /game/v1/instance1 {
            proxy_pass http://localhost:8081;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
    }
}
